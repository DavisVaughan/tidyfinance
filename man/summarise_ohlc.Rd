% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise_ohlc.R
\name{summarise_ohlc}
\alias{summarise_ohlc}
\alias{summarize_ohlc}
\alias{aggregate_ohlc}
\title{Calculate OHLC prices}
\usage{
summarise_ohlc(.tbl_time, ...)

summarize_ohlc(.tbl_time, ...)

aggregate_ohlc(.tbl_time, open, high, low, close)
}
\arguments{
\item{.tbl_time}{A tbl_time object.}

\item{...}{Bare column names of the price columns to be converted to OHLC
format.}

\item{open, high, low, close}{Bare column names of existing OHLC columns to be
reaggregated.}
}
\description{
\code{summarise_ohlc()} calculates new OHLC price columns from specified price columns.
\code{aggregate_ohlc()} takes an existing set of OHLC columns and reaggregates
them to a coarser periodicity (daily to monthly, etc). The easiest way to
reaggregate is to collapse your index to a different period, group by it,
and call \code{aggregate_ohlc()}.
}
\details{
Both \code{summarise_ohlc()} and \code{aggregate_ohlc()} are wrappers around a common
\code{\link[dplyr:summarise]{dplyr::summarise()}} style call that calculates the Open (first), High (max),
Low (min) and Close (last) values. Neither function knows
how to transform to a new \code{period} on its own, so the way to aggregate from,
say, daily to monthly involves collapsing a daily column of dates to
monthly using \code{\link[tibbletime:collapse_index]{tibbletime::collapse_index()}}, grouping on the collapsed date,
and then calling \code{aggregate_ohlc()}. The same workflow applies to
\code{summarise_ohlc()} when doing the similar calculation of  immediately creating
monthly OHLC summaries from a daily price column.
}
\examples{

# ---------------------------------------------------------------------------
# Setup

library(tibbletime)
library(dplyr)

data(FB)
FB_time <- FB \%>\%
  as_tbl_time(date)

# ---------------------------------------------------------------------------
# Calculate monthly OHLC

FB_monthly <- FB_time \%>\%
  collapse_by("monthly") \%>\%
  group_by(date) \%>\%
  summarise_ohlc(adjusted)

FB_monthly

# ---------------------------------------------------------------------------
# Reaggregate existing monthly OHLC up to yearly OHLC

FB_monthly \%>\%
  collapse_by("yearly") \%>\%
  group_by(date) \%>\%
  aggregate_ohlc(adjusted_open, adjusted_high, adjusted_low, adjusted_close)

}
